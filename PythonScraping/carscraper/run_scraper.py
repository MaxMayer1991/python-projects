import subprocess
import sys
import datetime
import os


def run_spider(spider_name="carspider"):
    """–ó–∞–ø—É—Å–∫ Scrapy spider —á–µ—Ä–µ–∑ subprocess"""

    # –ì–µ–Ω–µ—Ä—É—î–º–æ timestamp –¥–ª—è —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö –¥–æ Python
    if os.name == 'nt':  # Windows
        # –ü—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ venv –≤ —Ä—ñ–∑–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö
        possible_paths = [
            os.path.join('.venv', 'Scripts', 'python.exe'),
            os.path.join('..', '.venv', 'Scripts', 'python.exe'),
            os.path.join('venv', 'Scripts', 'python.exe'),
            sys.executable  # Fallback - –ø–æ—Ç–æ—á–Ω–∏–π Python
        ]

        python_exec = None
        for path in possible_paths:
            full_path = os.path.abspath(path)
            if os.path.exists(full_path):
                python_exec = full_path
                break

        if not python_exec:
            python_exec = sys.executable
            print(f"‚ö†Ô∏è  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Å–∏—Å—Ç–µ–º–Ω–∏–π Python: {python_exec}")
        else:
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ Python: {python_exec}")
    else:
        python_exec = sys.executable

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –º–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –∫–∞—Ç–∞–ª–æ–∑—ñ (–º–∞—î –±—É—Ç–∏ scrapy.cfg)
    scrapy_cfg = 'scrapy.cfg'
    if not os.path.exists(scrapy_cfg):
        print(f"‚ùå scrapy.cfg –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ {os.path.abspath('carscraper')}")
        print("–ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç –∑ –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥—É –ø—Ä–æ–µ–∫—Ç—É!")
        return False

    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–∞–ø–∫–∏
    os.makedirs('logs', exist_ok=True)
    os.makedirs('data', exist_ok=True)

    # –ó–º—ñ–Ω—é—î–º–æ —Ä–æ–±–æ—á–∏–π –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞ carscraper (–¥–µ scrapy.cfg)
    original_dir = os.getcwd()
    scrapy_dir = os.path.abspath('carscraper')
    os.chdir(scrapy_dir)

    try:
        # –§–æ—Ä–º—É—î–º–æ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∑–∞–ø—É—Å–∫—É
        log_file = os.path.join('..', 'logs', f'spider_{timestamp}.log')
        data_file = os.path.join('..', 'data', f'cars_{timestamp}.csv')

        cmd = [
            python_exec, '-m', 'scrapy', 'crawl', spider_name,
            '-L', 'INFO',
            '--logfile', log_file,
            '-o', data_file
        ]

        print(f"üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥–∏: {' '.join(cmd)}")
        print(f"üìÅ –†–æ–±–æ—á–∏–π –∫–∞—Ç–∞–ª–æ–≥: {os.getcwd()}")

        # –ó–∞–ø—É—Å–∫–∞—î–º–æ spider
        result = subprocess.run(
            cmd,
            check=True,
            capture_output=True,
            text=True,
            cwd=scrapy_dir
        )

        print(f"‚úÖ Spider '{spider_name}' –∑–∞–≤–µ—Ä—à–∏–≤—Å—è —É—Å–ø—ñ—à–Ω–æ (–∫–æ–¥: {result.returncode})")
        print(f"üìÑ –õ–æ–≥ —Ñ–∞–π–ª: {os.path.abspath(log_file)}")
        print(f"üìä –§–∞–π–ª –¥–∞–Ω–∏—Ö: {os.path.abspath(data_file)}")

        if result.stdout:
            print("üì§ Stdout:", result.stdout[:500])

        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É spider: {e}")
        print(f"üì§ Stdout: {e.stdout}")
        print(f"üì• Stderr: {e.stderr}")
        return False

    except FileNotFoundError as e:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {e}")
        print(f"üîç –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —à–ª—è—Ö –¥–æ Python: {python_exec}")
        return False

    finally:
        # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –≤ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥
        os.chdir(original_dir)


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Run scrapy spider from CLI")
    parser.add_argument('--spider', default="carspider", help='Spider name to run')
    args = parser.parse_args()

    success = run_spider(args.spider)
    sys.exit(0 if success else 1)